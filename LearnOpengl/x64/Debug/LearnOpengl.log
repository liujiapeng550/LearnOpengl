  main.cpp
e:\learnopengl\sdk\image\stb_image.h(6194): warning C4193: #pragma warning(pop): 没有匹配的“#pragma warning(push)”
e:\learnopengl\sdk\assimp\include\assimp\metadata.h(152): warning C4800: “void *”: 将值强制为布尔值“true”或“false”(性能警告)
e:\learnopengl\learnopengl\mesh.h(88): warning C4267: “参数”: 从“size_t”转换到“GLsizei”，可能丢失数据
e:\learnopengl\learnopengl\main.cpp(113): warning C4244: “初始化”: 从“double”转换到“float”，可能丢失数据
e:\learnopengl\learnopengl\main.cpp(185): warning C4244: “初始化”: 从“double”转换到“float”，可能丢失数据
e:\learnopengl\learnopengl\main.cpp(209): warning C4244: “=”: 从“double”转换到“float”，可能丢失数据
e:\learnopengl\learnopengl\main.cpp(210): warning C4244: “=”: 从“double”转换到“float”，可能丢失数据
e:\learnopengl\learnopengl\main.cpp(214): warning C4244: “初始化”: 从“double”转换到“float”，可能丢失数据
e:\learnopengl\learnopengl\main.cpp(215): warning C4244: “初始化”: 从“double”转换到“float”，可能丢失数据
e:\learnopengl\learnopengl\main.cpp(217): warning C4244: “=”: 从“double”转换到“float”，可能丢失数据
e:\learnopengl\learnopengl\main.cpp(218): warning C4244: “=”: 从“double”转换到“float”，可能丢失数据
e:\learnopengl\learnopengl\main.cpp(226): warning C4244: “参数”: 从“double”转换到“float”，可能丢失数据
e:\learnopengl\learnopengl\main.cpp(248): warning C4305: “初始化”: 从“double”到“float”截断
e:\learnopengl\learnopengl\main.cpp(279): warning C4267: “=”: 从“size_t”转换到“unsigned int”，可能丢失数据
e:\learnopengl\learnopengl\main.cpp(303): warning C4244: “参数”: 从“float”转换到“GLsizei”，可能丢失数据
e:\learnopengl\learnopengl\main.cpp(305): warning C4244: “参数”: 从“float”转换到“GLsizei”，可能丢失数据
e:\learnopengl\learnopengl\main.cpp(307): warning C4244: “参数”: 从“float”转换到“GLsizei”，可能丢失数据
model.obj : error LNK2005: "unsigned int __cdecl TextureFromFile(char const *,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,bool)" (?TextureFromFile@@YAIPEBDAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_N@Z) 已经在 main.obj 中定义
main.obj : error LNK2019: 无法解析的外部符号 stbi_load，该符号在函数 "unsigned int __cdecl TextureFromFile(char const *,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,bool)" (?TextureFromFile@@YAIPEBDAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_N@Z) 中被引用
model.obj : error LNK2001: 无法解析的外部符号 stbi_load
main.obj : error LNK2019: 无法解析的外部符号 stbi_image_free，该符号在函数 "unsigned int __cdecl TextureFromFile(char const *,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,bool)" (?TextureFromFile@@YAIPEBDAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_N@Z) 中被引用
model.obj : error LNK2001: 无法解析的外部符号 stbi_image_free
model.obj : error LNK2019: 无法解析的外部符号 "public: __cdecl Assimp::Importer::Importer(void)" (??0Importer@Assimp@@QEAA@XZ)，该符号在函数 "private: void __cdecl Model::loadModel(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)" (?loadModel@Model@@AEAAXAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z) 中被引用
model.obj : error LNK2019: 无法解析的外部符号 "public: __cdecl Assimp::Importer::~Importer(void)" (??1Importer@Assimp@@QEAA@XZ)，该符号在函数 "private: void __cdecl Model::loadModel(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)" (?loadModel@Model@@AEAAXAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z) 中被引用
model.obj : error LNK2019: 无法解析的外部符号 "public: struct aiScene const * __cdecl Assimp::Importer::ReadFile(char const *,unsigned int)" (?ReadFile@Importer@Assimp@@QEAAPEBUaiScene@@PEBDI@Z)，该符号在函数 "public: struct aiScene const * __cdecl Assimp::Importer::ReadFile(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned int)" (?ReadFile@Importer@Assimp@@QEAAPEBUaiScene@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@I@Z) 中被引用
model.obj : error LNK2019: 无法解析的外部符号 "public: char const * __cdecl Assimp::Importer::GetErrorString(void)const " (?GetErrorString@Importer@Assimp@@QEBAPEBDXZ)，该符号在函数 "private: void __cdecl Model::loadModel(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)" (?loadModel@Model@@AEAAXAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z) 中被引用
model.obj : error LNK2019: 无法解析的外部符号 aiGetMaterialTextureCount，该符号在函数 "public: unsigned int __cdecl aiMaterial::GetTextureCount(enum aiTextureType)const " (?GetTextureCount@aiMaterial@@QEBAIW4aiTextureType@@@Z) 中被引用
model.obj : error LNK2019: 无法解析的外部符号 aiGetMaterialTexture，该符号在函数 "public: enum aiReturn __cdecl aiMaterial::GetTexture(enum aiTextureType,unsigned int,struct aiString *,enum aiTextureMapping *,unsigned int *,float *,enum aiTextureOp *,enum aiTextureMapMode *)const " (?GetTexture@aiMaterial@@QEBA?AW4aiReturn@@W4aiTextureType@@IPEAUaiString@@PEAW4aiTextureMapping@@PEAIPEAMPEAW4aiTextureOp@@PEAW4aiTextureMapMode@@@Z) 中被引用
E:\LearnOpengl\x64\Debug\LearnOpengl.exe : fatal error LNK1120: 8 个无法解析的外部命令
